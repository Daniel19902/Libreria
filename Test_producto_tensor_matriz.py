import unittest
import Libreria.ProductoTensorMatrices

class test_produsto_tensor_matrices(unittest.TestCase):

    def test_tensor_matrices1(self):
        self.assertEqual(Libreria.ProductoTensorMatrices.producto_tensor_matrices([[(1, 0), (2, 0)], [(3, 0), (1, 0)]], [[(0, 0), (3, 0)], [(2, 0), (1, 0)]]), [[[[0j, (3+0j)], [(2+0j), (1+0j)]], [[0j, (6+0j)], [(4+0j), (2+0j)]]],[[[0j, (9+0j)], [(6+0j), (3+0j)]], [[0j, (3+0j)], [(2+0j), (1+0j)]]]])

    def test_tensor_matrices2(self):
        self.assertEqual(Libreria.ProductoTensorMatrices.producto_tensor_matrices([[(3, 2), (0, 0), (5, -6)], [(1, 0), (4, 2), (0, 1)], [(4, -1),(0, 0),(4, 0)]],[[(5, 0), (2, -1), (6, -4)], [(0, 0), (4, 5), (2, 0)], [(7, -4),(2, 7),(0, 0)]]), [[[[(15+10j), (8+1j), (26+0j)], [0j, (2+23j), (6+4j)], [(29+2j), (-8+25j), 0j]],[[0j, 0j, 0j], [0j, 0j, 0j], [0j, 0j, 0j]],[[(25-30j), (4-17j), (6-56j)],[0j, (50+1j), (10-12j)],[(11-62j), (52+23j), 0j]]],[[[(5+0j), (2-1j), (6-4j)], [0j, (4+5j), (2+0j)], [(7-4j), (2+7j), 0j]],[[(20+10j), (10+0j), (32-4j)],[0j, (6+28j), (8+4j)],[(36-2j), (-6+32j), 0j]],[[5j, (1+2j), (4+6j)], [0j, (-5+4j), 2j], [(4+7j), (-7+2j), 0j]]],[[[(20-5j), (7-6j), (20-22j)],[0j, (21+16j), (8-2j)],[(24-23j), (15+26j), 0j]],[[0j, 0j, 0j], [0j, 0j, 0j], [0j, 0j, 0j]],[[(20+0j), (8-4j), (24-16j)],[0j, (16+20j), (8+0j)],[(28-16j), (8+28j), 0j]]]])

    def test_tensor_matrices(self):
        self.assertEqual(Libreria.ProductoTensorMatrices.producto_tensor_matrices([[(5, 0), (3, 0), (-4, 0), (-2, 0)], [(8, 0), (-1, 0), (0, 0), (-3, 0)]], [[(1, 0), (4, 0), (0, 0)], [(-5, 0), (3, 0), (7, 0)], [(0, 0), (-9, 0), (5, 0)], [(5, 0), (1, 0), (4, 0)]]), [[[[(5+0j), (20+0j), 0j],[(-25+0j), (15+0j), (35+0j)],[0j, (-45+0j), (25+0j)],[(25+0j), (5+0j), (20+0j)]],[[(3+0j), (12+0j), 0j],[(-15+0j), (9+0j), (21+0j)],[0j, (-27+0j), (15+0j)],[(15+0j), (3+0j), (12+0j)]],[[(-4+0j), (-16+0j), (-0+0j)],[(20-0j), (-12+0j), (-28+0j)],[(-0+0j), (36-0j), (-20+0j)],[(-20+0j), (-4+0j), (-16+0j)]],[[(-2+0j), (-8+0j), (-0+0j)],[(10-0j), (-6+0j), (-14+0j)],[(-0+0j), (18-0j), (-10+0j)],[(-10+0j), (-2+0j), (-8+0j)]]],[[[(8+0j), (32+0j), 0j],[(-40+0j), (24+0j), (56+0j)],[0j, (-72+0j), (40+0j)],[(40+0j), (8+0j), (32+0j)]],[[(-1+0j), (-4+0j), (-0+0j)],[(5-0j), (-3+0j), (-7+0j)],[(-0+0j), (9-0j), (-5+0j)],[(-5+0j), (-1+0j), (-4+0j)]],[[0j, 0j, 0j], [(-0+0j), 0j, 0j], [0j, (-0+0j), 0j], [0j, 0j, 0j]],[[(-3+0j), (-12+0j), (-0+0j)],[(15-0j), (-9+0j), (-21+0j)],[(-0+0j), (27-0j), (-15+0j)],[(-15+0j), (-3+0j), (-12+0j)]]]])

    def test_tensor_matrices4(self):
        self.assertEqual(Libreria.ProductoTensorMatrices.producto_tensor_matrices([[(-2, 0), (3, 0)], [(-5, 0), (1, 0)], [(0, 0), (-6, 0)]], [[(1, 0), (-5, 0), (0, 0)], [(-8, 0), (9, 0), (2, 0)]]), [[[[(-2+0j), (10-0j), (-0+0j)], [(16-0j), (-18+0j), (-4+0j)]],[[(3+0j), (-15+0j), 0j], [(-24+0j), (27+0j), (6+0j)]]],[[[(-5+0j), (25-0j), (-0+0j)], [(40-0j), (-45+0j), (-10+0j)]],[[(1+0j), (-5+0j), 0j], [(-8+0j), (9+0j), (2+0j)]]],[[[0j, (-0+0j), 0j], [(-0+0j), 0j, 0j]],[[(-6+0j), (30-0j), (-0+0j)], [(48-0j), (-54+0j), (-12+0j)]]]])

    def test_tensor_matrices5(self):
        self.assertEqual(Libreria.ProductoTensorMatrices.producto_tensor_matrices([[(16, 2.3)],[(0,-7)],[(6,0)],[(0,-4)]],[[(6, -4)],[(7,3)],[(4.2,-8.1)],[(0,-3)]]), [[[[(105.2-50.2j)],[(105.1+64.1j)],[(85.83-119.94j)],[(6.8999999999999995-48j)]]],[[[(-28-42j)],[(21-49j)],[(-56.699999999999996-29.400000000000002j)],[(-21-0j)]]],[[[(36-24j)], [(42+18j)], [(25.200000000000003-48.599999999999994j)], [-18j]]],[[[(-16-24j)], [(12-28j)], [(-32.4-16.8j)], [(-12-0j)]]]])